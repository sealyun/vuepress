(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{255:function(e,t,n){"use strict";n.r(t);var a=n(0),l=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"是时候表现一下我的vim了"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#是时候表现一下我的vim了"}},[e._v("#")]),e._v(" 是时候表现一下我的vim了")]),e._v(" "),n("h1",{attrs:{id:"使用vim作golang开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用vim作golang开发"}},[e._v("#")]),e._v(" 使用vim作golang开发")]),e._v(" "),n("p",[e._v("分享一些我使用的vim插件，以及制作过程，最终的功能有：")]),e._v(" "),n("ul",[n("li",[e._v("golang开发，补全，跳转，文件列表，函数列表等")]),e._v(" "),n("li",[e._v("kubernetes插件，方便写yaml文件")]),e._v(" "),n("li",[e._v("好看的颜色主题\n")])]),e._v(" "),n("p",[e._v("先睹为快：")]),e._v(" "),n("p",[n("img",{attrs:{src:"/vim.png",alt:""}})]),e._v(" "),n("h1",{attrs:{id:"安装macvim"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装macvim"}},[e._v("#")]),e._v(" 安装macvim")]),e._v(" "),n("p",[e._v("主要是YouCompleteMe mac系统上需要依赖这个"),n("a",{attrs:{href:"https://github.com/macvim-dev/macvim/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("地址"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("非mac环境我会提供一个docker镜像")]),e._v(" "),n("h1",{attrs:{id:"安装插件管理器vundle"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装插件管理器vundle"}},[e._v("#")]),e._v(" 安装插件管理器vundle")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n")])])]),n("p",[e._v("我的~/.vimrc")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("set nocompatible              \" be iMproved, required\n\" 🔑  (key)\nlet mapleader=\",\"\nfiletype off \"required\n\nset foldmethod=indent\n\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\n\" The following are examples of different formats supported.\n\" Keep Plugin commands between vundle#begin/end.\n\" plugin on GitHub repo\n\" Plugin 'tpope/vim-fugitive'\n\" plugin from http://vim-scripts.org/vim/scripts.html\nPlugin 'L9'\n\" The sparkup vim script is in a subdirectory of this repo called vim.\n\" Pass the path to set the runtimepath properly.\n\" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}\n\" Plugin 'nsf/gocode',{'rtp':'vim/'}\nPlugin 'fatih/vim-go'\nBundle 'scrooloose/nerdtree'\n\"Bundle 'cespare/vim-golang'\n\" Bundle 'dgryski/vim-godef'\nPlugin 'Valloric/YouCompleteMe'\n\" Plugin 'SirVer/ultisnips'\n\" Plugin 'majutsushi/tagbar'\nPlugin 'vim-scripts/taglist.vim'\n\" Plugin 'junegunn/vim-emoji'\n\" Plugin 'rjohnsondev/vim-compiler-go'\n\" Plugin 'dgryski/vim-godef'\n\" Plugin 'davidhalter/jedi-vim'\n\" Plugin 'scrooloose/syntastic'\n\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\nnmap <C-h> <C-w>h\nnmap <C-l> <C-w>l\nnmap <C-j> <C-w>j\nnmap <C-k> <C-w>k\n\nmap <C-n> :NERDTreeToggle<CR>\nmap <C-t> :b 1 <CR>\n\n\nBundle 'majutsushi/tagbar'\nnmap <Leader>t :TagbarToggle<CR>\nlet g:tagbar_width = 25\nautocmd VimEnter * nested :call tagbar#autoopen(1)\nautocmd BufWritePre *.go:Fmt\nlet g:tagbar_right = 1\nlet g:Tlist_Ctags_Cmd='/usr/local/Cellar/ctags/5.8_1/bin/ctags'\n\nlet g:molokai_original = 1\nlet g:rehash256 = 1\nset sw=4\n\ncolorscheme molokai\n\nset nu\nset ts=4\nset expandtab\nsyntax on\n\nlet g:go_highlight_functions = 1\nlet g:go_highlight_methods = 1\nlet g:go_highlight_structs = 1\nlet g:go_highlight_operators = 1\nlet g:go_highlight_build_constraints = 1\nlet g:go_fmt_command = \"goimports\"\nlet g:go_fmt_fail_silently = 1\nlet g:syntastic_go_checkers = ['golint', 'govet', 'errcheck']\nlet g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['go'] }\n\nlet g:UltiSnipsExpandTrigger=\"<C-g>\"\n\nlet g:godef_split=2\nlet g:godef_same_file_in_same_window=1\n\nau FileType go nmap <leader>r <Plug>(go-run)\nau FileType go nmap <leader>b <Plug>(go-build)\nau FileType go nmap <leader>T <Plug>(go-test)\nau FileType go nmap <leader>c <Plug>(go-coverage)\n\nau FileType go nmap <Leader>ds <Plug>(go-def-split)\nau FileType go nmap <Leader>dv <Plug>(go-def-vertical)\nau FileType go nmap <Leader>dt <Plug>(go-def-tab)\n\nlet g:syntastic_always_populate_loc_list = 1\nlet g:syntastic_auto_loc_list = 1\nlet g:syntastic_check_on_open = 1\nlet g:syntastic_check_on_wq = 0\n\nset rtp+=$GOPATH/src/github.com/golang/lint/misc/vim\nautocmd BufWritePost,FileWritePost *.go execute 'Lint' | cwindow\nset completefunc=emoji#complete\nmap <C-e> :%s/:\\([^:]\\+\\):/\\=emoji#for(submatch(1), submatch(0))/g <CR>\n\nset lines=120 columns=150\n")])])]),n("p",[e._v("启动vim 执行 :PluginInstall")]),e._v(" "),n("h1",{attrs:{id:"安装youcompleteme"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装youcompleteme"}},[e._v("#")]),e._v(" 安装YouCompleteMe")]),e._v(" "),n("p",[e._v("安装brew ctags cmake:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\nbrew install cmake\nbrew install ctags-exuberant\n')])])]),n("p",[e._v("必须要安装好golang再进行以下步骤")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cd ~/.vim/bundle/YouCompleteMe\n./install.py --clangd-completer --go-completer\n")])])]),n("h1",{attrs:{id:"初始化vim-go"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化vim-go"}},[e._v("#")]),e._v(" 初始化vim-go")]),e._v(" "),n("p",[e._v("启动vim执行 :GoInstallBinaries (要访问golang官网，所以你懂的)")]),e._v(" "),n("h1",{attrs:{id:"安装颜色主题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装颜色主题"}},[e._v("#")]),e._v(" 安装颜色主题")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("git clone https://github.com/tomasr/molokai ~/.vim\nmv ~/.vim/molokai/colors ~/.vim\n")])])]),n("h1",{attrs:{id:"常用快捷键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用快捷键"}},[e._v("#")]),e._v(" 常用快捷键")]),e._v(" "),n("p",[e._v("Ctrl n 文件目录\n, t 函数列表\n,dt 跳转到函数定义")]),e._v(" "),n("h1",{attrs:{id:"更多内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更多内容"}},[e._v("#")]),e._v(" 更多内容")]),e._v(" "),n("p",[e._v("为什么写这篇文章，因为"),n("a",{attrs:{href:"https://github.com/fanux/fist",target:"_blank",rel:"noopener noreferrer"}},[e._v("fist"),n("OutboundLink")],1),e._v(" 的webterminal里会集成这样一个vim，webterminal就具备非常强大的k8s管理能力，特别是编写yaml配置文件，就可以做到比如你输入一个dep补全后就直接生成一个Deployment配置，非常高效，还语法高亮，yaml语法检测等，是不是很期待~")])])}),[],!1,null,null,null);t.default=l.exports}}]);