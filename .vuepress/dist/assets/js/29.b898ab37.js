(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{226:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"kubernetes对接第三方认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes对接第三方认证"}},[e._v("#")]),e._v(" kubernetes对接第三方认证")]),e._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),n("p",[e._v("本文介绍如何使用github账户去关联自己kubernetes账户。达到如下效果：")]),e._v(" "),n("ol",[n("li",[e._v("使用github用户email作为kubernetes用户，如fhtjob@hotmail.com")]),e._v(" "),n("li",[e._v("创建对应的clusterrole绑定给fhtjob@hotmail.com这个用户")]),e._v(" "),n("li",[e._v("给fhtjob@hotmail这个用户创建一个kubeconfig文件，让改用户可以使用kubectl命令操作集群，且只有部分权限\n")])]),e._v(" "),n("h2",{attrs:{id:"dex介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dex介绍"}},[e._v("#")]),e._v(" dex介绍")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/coreos/dex",target:"_blank",rel:"noopener noreferrer"}},[e._v("dex"),n("OutboundLink")],1),e._v(" 是一个统一认证的服务，支持各种认证协议如Ouath2 ldap等，自己可以作为一个identity provider,也可以连到别的id provider(如github)上,dex作为一个中间代理.")]),e._v(" "),n("h2",{attrs:{id:"流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[e._v("#")]),e._v(" 流程")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("          http://47.52.197.163:5555    http://47.52.197.163:32000\n  人(浏览器）   dex client                 dex server               github                      kubectl             kubernetes server\n  |   login(scope) |                         |                       |                           |                        |\n  |------1--------\x3e|                         |                       |                           |                        |\n  |                |----------2-------------\x3e|                       |                           |                        |\n  |                |                         |----------3-----------\x3e|                           |                        |\n  |                |                         |   id_token            |                           |                        |\n  |                |                         |<---------4------------| callback                  |                        |\n  |  id_token      |<----------5-------------|callback               |                           |                        |\n  |<-------6-------|                         |                       |                           |                        |\n  |                |                         |                       |               id_token    |                        |\n  |------------------------------------------------7--------------------------------------------\x3e|        id_token        |\n  |                |                         |                       |                           |----------8------------\x3e|\n  |                |                         |                       |                           |                        | valid? \n  |                |                         |                       |                           |                        | expired?\n  |                |                         |                       |                           |                        | user Authorized?\n  |                |                         |                       |                           |<---------9-------------|\n  X<----------------------------------------------10---------------------------------------------|                        |\n  |                |                         |                       |                           |                        |\n  |                |                         |                       |                           |                        |\n  |                |                         |                       |                           |                        |\n")])])]),n("ul",[n("li",[e._v("scope: 你需要哪些信息，如邮箱,openid,用户名等")]),e._v(" "),n("li",[e._v("id_token: 加密后的你需要的信息")]),e._v(" "),n("li",[e._v("dex client: dex的客户端，比如可以是我们自己写的管理的服务端，会去调用第三方登录的流程，或者我们写的一个网站后台处理登录的逻辑")]),e._v(" "),n("li",[e._v("dex server: dex的服务端，一边作为client的服务端，另一边其实是github的客户端")])]),e._v(" "),n("ol",[n("li",[e._v("用户在浏览器发起登录请求")]),e._v(" "),n("li",[e._v("dexclient把请求重定向给dexserver")]),e._v(" "),n("li",[e._v("dexserver重定向给github，这时用户就会跳转到github的页面去授权允许访问哪些信息")]),e._v(" "),n("li",[e._v("github把对应信息加密调用dexserver的回调url(http://47.52.197.163:32000/callback)把信息传给dex server, 注意区分dex client的回调")]),e._v(" "),n("li",[e._v("dexserver把信息回调给dex client(http://47.52.197.163:5555/callback)")]),e._v(" "),n("li",[e._v("浏览器中拿到token")]),e._v(" "),n("li",[e._v("把token加到kubeconfig文件中，让kubectl可以使用")]),e._v(" "),n("li",[e._v("kubectl把token传给kubernetes server, server有 dex server的公钥可以解析token，拿到username, 看是否过期，看授权是否允许执行该动作")]),e._v(" "),n("li",[e._v("把执行结果返回给kubectl")])]),e._v(" "),n("h2",{attrs:{id:"环境介绍与注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境介绍与注意事项"}},[e._v("#")]),e._v(" 环境介绍与注意事项")]),e._v(" "),n("ul",[n("li",[e._v("采用云服务器进行该实验，Floatingip是47.52.197.163")]),e._v(" "),n("li",[e._v("你需要有一个github账户，我的是github.com/fanux 把email(fhtjob@hotmail.com)作为kubernetes账户")]),e._v(" "),n("li",[e._v("服务器上要装golang")]),e._v(" "),n("li",[e._v("官方教程有很多坑，建议看我的教程")]),e._v(" "),n("li",[e._v("需要有个k8s集群，那么我最推荐的安装方式当然是购买我的"),n("a",{attrs:{href:"https://market.aliyun.com/products/57742013/cmxz025618.html?spm=5176.730005.0.0.TFKV5K#sku=yuncode1961800000",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装包"),n("OutboundLink")],1),e._v("哈哈")])]),e._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),n("h3",{attrs:{id:"修改kube-apiserver配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改kube-apiserver配置"}},[e._v("#")]),e._v(" 修改kube apiserver配置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('[root@master2 ~]# cat /etc/kubernetes/manifests/kube-apiserver.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    scheduler.alpha.kubernetes.io/critical-pod: ""\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --oidc-issuer-url=https://47.52.197.163:32000   # 加上这五个参数\n    - --oidc-client-id=example-app\n    - --oidc-ca-file=/etc/kubernetes/ssl/ca.pem # dex证书，挂载进来的\n    - --oidc-username-claim=email\n    - --oidc-groups-claim=groups\n\n...\n\n    - mountPath: /etc/kubernetes/ssl  # 把dex的证书挂进去给apiserver使用\n      name: dex\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n      type: DirectoryOrCreate\n    name: dex\n')])])]),n("p",[e._v("用kubeadm安装的修改/etc/kubernetes/manifests/kube-apiserver.yaml这个文件即可，建议不要直接修改，拷贝出来修改再复制回去，防止kubelet去拉swap文件导致controller manager异常")]),e._v(" "),n("h3",{attrs:{id:"创建github-app"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建github-app"}},[e._v("#")]),e._v(" 创建github app")]),e._v(" "),n("p",[e._v("点你github头像，settings->developer settins -> new oauth app")]),e._v(" "),n("p",[e._v("Application name: example-app\nHomepage URL：https://47.52.197.163:32000"),n("br"),e._v("\nAuthorization callback URL: https://47.52.197.163:32000/callback")]),e._v(" "),n("p",[e._v("URL千万别填错，注意是dex server的URL而不是dex client的5555")]),e._v(" "),n("p",[e._v("然后你就能看到一个ID一个secrect 后面需要用")]),e._v(" "),n("h3",{attrs:{id:"部署dex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署dex"}},[e._v("#")]),e._v(" 部署dex")]),e._v(" "),n("p",[e._v("没装go的自己去装。。。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("go get github.com/coreos/dex \ncd $GOPATH/src/github.com/coreos/dex\n")])])]),n("p",[e._v("生成证书\ngencert.sh需要改一下，把我们IP加进去")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[alt_names]\nDNS.1 = dex.example.com\nIP.1 = 47.52.197.163\nIP.2 = 172.31.244.238\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ cd examples/k8s\n$ ./gencert.sh\n$ cp examples/k8s/ssl /etc/kubernetes # 可曾记得我们挂载的目录\n")])])]),n("p",[e._v("创建secrect,这个会给dex server用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ kubectl create secret tls dex.example.com.tls --cert=ssl/cert.pem --key=ssl/key.pem\n")])])]),n("p",[e._v("再创建一个secrect给dex server Github OAuth2 客户端用，dex server是github的一个客户端要理解")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ kubectl create secret \\\n    generic github-client \\\n    --from-literal=client-id=$GITHUB_CLIENT_ID \\   # 这俩东西替换成在github页面上创建的APP clientid和secrect\n    --from-literal=client-secret=$GITHUB_CLIENT_SECRET\n")])])]),n("p",[e._v("启动dex.yaml，注意代码里直接clone下来的没有配置存储，而且镜像比较老，建议用我的：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    app: dex\n  name: dex\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: dex\n    spec:\n      containers:\n      - image: quay.io/coreos/dex:v2.10.0\n        name: dex\n        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]\n\n        ports:\n        - name: https\n          containerPort: 5556\n\n        volumeMounts:\n        - name: config\n          mountPath: /etc/dex/cfg\n        - name: data\n          mountPath: /etc/example\n        - name: tls\n          mountPath: /etc/dex/tls\n\n        env:\n        - name: GITHUB_CLIENT_ID\n          valueFrom:\n            secretKeyRef:\n              name: github-client\n              key: client-id\n        - name: GITHUB_CLIENT_SECRET\n          valueFrom:\n            secretKeyRef:\n              name: github-client\n              key: client-secret\n      volumes:\n      - name: data\n        hostPath:\n            path: /data/example\n      - name: config\n        configMap:\n          name: dex\n          items:\n          - key: config.yaml\n            path: config.yaml\n      - name: tls\n        secret:\n          secretName: dex.example.com.tls\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: dex\ndata:\n  config.yaml: |\n    issuer: https://47.52.197.163:32000\n    storage:\n      type: sqlite3\n      config:\n        file: /etc/example/dex.db\n\n    web:\n      https: 0.0.0.0:5556\n      tlsCert: /etc/dex/tls/tls.crt\n      tlsKey: /etc/dex/tls/tls.key\n    connectors:\n    - type: github\n      id: github\n      name: GitHub\n      config:\n        clientID: $GITHUB_CLIENT_ID\n        clientSecret: $GITHUB_CLIENT_SECRET\n        redirectURI: https://47.52.197.163:32000/callback\n        org: kubernetes\n    oauth2:\n      skipApprovalScreen: true\n\n    staticClients:\n    - id: example-app\n      redirectURIs:\n      - \'http://47.52.197.163:5555/callback\'\n      name: \'Example App\'\n      secret: ZXhhbXBsZS1hcHAtc2VjcmV0\n\n    enablePasswordDB: true\n    staticPasswords:\n    - email: "admin@example.com"\n      # bcrypt hash of the string "password"\n      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"\n      username: "admin"\n      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: dex\nspec:\n  type: NodePort\n  ports:\n  - name: dex\n    port: 5556\n    protocol: TCP\n    targetPort: 5556\n    nodePort: 32000\n  selector:\n    app: dex\n')])])]),n("p",[e._v("主要修改了：")]),e._v(" "),n("ul",[n("li",[e._v("镜像")]),e._v(" "),n("li",[e._v("一些地址，改成自己的IP")]),e._v(" "),n("li",[e._v("存储，我改成了sqlite, 需要挂载一个文件进去，在宿主机上创建一个文件")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ touch /data/example/dex.db\n$ kubectl create -f dex.yaml\n")])])]),n("h3",{attrs:{id:"启动dex-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动dex-client"}},[e._v("#")]),e._v(" 启动dex client")]),e._v(" "),n("p",[e._v("编译客户端dex目录下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("make\n")])])]),n("p",[e._v("启动客户端：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ ./bin/example-app --issuer https://47.52.197.163:32000 --issuer-root-ca examples/k8s/ssl/ca.pem --redirect-uri http://47.52.197.163:5555/callback\n")])])]),n("h3",{attrs:{id:"浏览器访问获取token"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器访问获取token"}},[e._v("#")]),e._v(" 浏览器访问获取token")]),e._v(" "),n("p",[e._v("浏览器访问 http://47.52.197.163:5555 ,点击login后能看到 Log in to dex 下面可以选 log in with Email 和 log in with github\n点击log in with github 授权后得到：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Token:\n\neyJhbGciOiJSUzI1NiIsImtpZCI6ImMyZWIzYzkwMmM0NDliMTYwMGNjNzNhMWYyNWVjMjI0MDY4NmE0OGMifQ.eyJpc3MiOiJodHRwczovLzQ3LjUyLjE5Ny4xNjM6MzIwMDAiLCJzdWIiOiJDZ2M0T1RFeU5UVTNFZ1puYVhSb2RXSSIsImF1ZCI6ImV4YW1wbGUtYXBwIiwiZXhwIjoxNTI0MDIwNzA3LCJpYXQiOjE1MjM5MzQzMDcsImF0X2hhc2giOiI5czJob0lzUHRlMW9nc3VKemRab1pnIiwiZW1haWwiOiJmaHRqb2JAaG90bWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6InN0ZXZlbiJ9.uJAL08BZioSWPaEFh8R50JQVRw6QXgC1n3sn5ovzaoauy51YFjdSh08UZT8KQon8R5JdZ4U06BczwmOG_tT0mWVd_mDqLnRm6lGpm9znYiC1OLNGZOdzuQVsuxe4Lk1YOvxTsJQtpYuOcXXKkwmdfWNeh4VyZoALiVZxLfL44lSnU55JutLNnGD5S6Aiu6YF0xwlcX5Eq1j2pYtg4isnPtU4k6gbiEYCMPm0Gs3FPljnLT7a-TB1tjZLc4RDwBZ4OoiYRu5mAmH5SHHq1_TS9wDTXX16KlQTG9tS_I11n--1grYTz5WondBoM14BJebDdcSF7nRWJ-I8CU_UYu6gcA\nClaims:\n\n{\n  "iss": "https://47.52.197.163:32000",\n  "sub": "Cgc4OTEyNTU3EgZnaXRodWI",\n  "aud": "example-app",\n  "exp": 1524020707,\n  "iat": 1523934307,\n  "at_hash": "9s2hoIsPte1ogsuJzdZoZg",\n  "email": "fhtjob@hotmail.com",\n  "email_verified": true,\n  "name": "steven"\n}\nRefresh Token:\n\nChlrem12bDdmdGJ1dWNlYnk0b2llcWd0YzNqEhloNGhwbmlsZnByZ29mdWdsdWZ6bGp4cHhs\n')])])]),n("p",[e._v("那么 恭喜你成功了, 这个token就是我们要的东西")]),e._v(" "),n("h3",{attrs:{id:"验证tocken"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证tocken"}},[e._v("#")]),e._v(" 验证tocken")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(' curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImJjOTU0NjdlM2I0OTE5YWE1OTEzZDNkMDU3NGM2ZTRjYjBjY2NhNzgifQ.eyJpc3MiOiJodHRwczovLzQ3LjUyLjE5Ny4xNjM6MzIwMDAiLCJzdWIiOiJDZ2M0T1RFeU5UVTNFZ1puYVhSb2RXSSIsImF1ZCI6ImV4YW1wbGUtYXBwIiwiZXhwIjoxNTIzOTYyNjUyLCJpYXQiOjE1MjM4NzYyNTIsImF0X2hhc2giOiJFUXRWWm5ObE50c2hhWERfZ3N2UkNBIiwiZW1haWwiOiJmaHRqb2JAaG90bWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6InN0ZXZlbiJ9.vu0keGMoRGg6OAYpMZNN9zm4pnKXGyXDkZaRNj6MXDY9XsfnBDT4HnXkY17Lvm1ow0xPbq9cgVL3JBZT73jiddgFNAIXJffHfPejlVRSqXx9iF1uEcNIc5tDA1hUPtBrX8n_rzdz0sZsPMb4ZYMx3AdEylszpVrS_OelbB4I_2eLfO0KzwcEknOgV8cZZghCCITl6ZTOeeWEv5FPvJjRC2rpu_MkSY5tAf30SITwldFUMgF8ei3aPrZdojPLgqUWtxKaDmPpcHVLhYr0sLE_BnDZLjGP4ff8l5yy_EfDc7sQsrJR7StwZXRnK-n2omqaV3z-n5IxaUty85e_97FA1g" -k https://172.31.244.238:6443/api/v1/namespaces/default/pods\n')])])]),n("p",[e._v("你会发现")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "kind": "Status",\n  "apiVersion": "v1",\n  "metadata": {\n\n  },\n  "status": "Failure",\n  "message": "pods is forbidden: User \\"fhtjob@hotmail.com\\" cannot list pods in the namespace \\"default\\"",\n  "reason": "Forbidden",\n  "details": {\n    "kind": "pods"\n  },\n  "code": 403\n}\n')])])]),n("p",[e._v("fhtjob@hotmail.com这个用户没有权限访问pods。我们给他创建一个角色绑定：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('[root@master2 dex]# cat examples/k8s/role.yaml\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: read-secrets-global\nsubjects:\n- kind: User\n  name: "fhtjob@hotmail.com" # Name is case sensitive\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin  # 超级用户给他\n  apiGroup: rbac.authorization.k8s.io\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ kubectl create -f examples/k8s/role.yaml\n")])])]),n("p",[e._v("再次curl:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\not@master2 dex]# curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImJjOTU0NjdlM2I0OTE5YWE1OTEzZDNkMDU3NGM2ZTRjYjBjY2NhNzgifQ.eyJpc3MiOiJodHRwczovLzQ3LjUyLjE5Ny4xNjM6MzIwMDAiLCJzdWIiOiJDZ2M0T1RFeU5UVTNFZ1puYVhSb2RXSSIsImF1ZCI6ImV4YW1wbGUtYXBwIiwiZXhwIjoxNTIzOTYyNjUyLCJpYXQiOjE1MjM4NzYyNTIsImF0X2hhc2giOiJFUXRWWm5ObE50c2hhWERfZ3N2UkNBIiwiZW1haWwiOiJmaHRqb2JAaG90bWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6InN0ZXZlbiJ9.vu0keGMoRGg6OAYpMZNN9zm4pnKXGyXDkZaRNj6MXDY9XsfnBDT4HnXkY17Lvm1ow0xPbq9cgVL3JBZT73jiddgFNAIXJffHfPejlVRSqXx9iF1uEcNIc5tDA1hUPtBrX8n_rzdz0sZsPMb4ZYMx3AdEylszpVrS_OelbB4I_2eLfO0KzwcEknOgV8cZZghCCITl6ZTOeeWEv5FPvJjRC2rpu_MkSY5tAf30SITwldFUMgF8ei3aPrZdojPLgqUWtxKaDmPpcHVLhYr0sLE_BnDZLjGP4ff8l5yy_EfDc7sQsrJR7StwZXRnK-n2omqaV3z-n5IxaUty85e_97FA1g" -k https://172.31.244.238:6443/api/v1/namespaces/default/pods\n{\n  "kind": "PodList",\n  "apiVersion": "v1",\n  "metadata": {\n    "selfLink": "/api/v1/namespaces/default/pods",\n    "resourceVersion": "333066"\n  },\n  "items": [\n    {\n      "metadata": {\n        "name": "dex-578588c896-rsp9w",\n        "generateName": "dex-578588c896-",\n        "namespace": "default",\n        "selfLink": "/api/v1/namespaces/default/pods/dex-578588c896-rsp9w",\n')])])]),n("p",[e._v("成功")]),e._v(" "),n("h3",{attrs:{id:"把tocken加入到证书中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把tocken加入到证书中"}},[e._v("#")]),e._v(" 把tocken加入到证书中")]),e._v(" "),n("p",[e._v("最简单的方式：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[root@master2 dex]# cat ~/.kube/config\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1ETXlOekV6TURNMU9Gb1hEVEk0TURNeU5ERXpNRE0xT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnl1CldVdWQxNEJjcFgvbU4xQ3dtUnZzRDJyVFF5aGdOQ3FDTGQ5M2VVVzRqbHJCQ0pCUGkzcE9mOXNTVFJELzV3V0YKUUpzOTE5eVZuRmdOOXBHVVRHbjVieHVtNzgrS3lvY20xTnJ3Z1kxUUpnWlZxVUZhQ1I5VDJ1RThBM1lyKzdITAovS3FHMEZ3S05UV0w3Zy85VFAzdmpQMW5XR3NTTElmVHAxMjNaK0lxZHJaQlI0NUZDQzBOQzU4cmxEYUErVFdOCjRVQ2xJalBKRHJuV2M1Z2E4a3NVYXN4UkQ5clR2dm5iOG05V2NEYnhXdEViTlJyS0R6cUp5K00wT1BacDdIY1QKWkhHUnlXTVR3WVhRVGlmWFhxVTY1U2VkdEdjT3ZsOHl0ck1UZndCRkh2Y1NWQW9sNytYUnNicSs4bDRKc0M5OApPN0tOODAxT0dvaUFyWWNFYjRjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLcFpoN0t5ZzRLM0dyK0NZRzdwbVlXUGR1eFUKMXcrY1BPZ053OE83MHNFWE5lbnFMbEZVdThtYjMxQTZ4RHZKWHZ4OXNiQ0o5YzdDeDFiaVNNYnFrWlBHRGs4UgpZSm5wZlB4WXBUWlBISmFkK1ZCb2tVY0J3QlluTTB1SXFzZGhvbHhPelVBUU9UbVo5M3UzSi9MeUNob3IwSmlJCm1uQ1hlaHlDaTZ1YTVvTldXNmVNWnlaRWxzRnpXcnlGdHkyNGRKVWkvQkd0SjR2ZStlRmtLTE9VTXpnMjBBU3YKZU1ldkdUL1FibWd1YXZhT1RCdjVDYW05RElSNEZSd2YvV2hwdHpMTVdCVFJXb2ROOUhkcE1tRDhxUmU1YnVWNgpiZ245VFgzejBncUhGMzFQZlBjcTJWRFRJWnJZK084MTBwOTQrbTA5YmxrcTQzSDdXQmhGTmdvditzUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    server: https://172.31.244.238:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImJjOTU0NjdlM2I0OTE5YWE1OTEzZDNkMDU3NGM2ZTRjYjBjY2NhNzgifQ.eyJpc3MiOiJodHRwczovLzQ3LjUyLjE5Ny4xNjM6MzIwMDAiLCJzdWIiOiJDZ2M0T1RFeU5UVTNFZ1puYVhSb2RXSSIsImF1ZCI6ImV4YW1wbGUtYXBwIiwiZXhwIjoxNTIzOTY3NDQzLCJpYXQiOjE1MjM4ODEwNDMsImF0X2hhc2giOiJMUzNKUVpiWDVuVnBuam5zSU5nNGZnIiwiZW1haWwiOiJmaHRqb2JAaG90bWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6InN0ZXZlbiJ9.KjKSkqqX1I21rkqF4t39x8YmEFx2yPlQSMFInVeAp4lCRACljMvTY07GSWycEez0SarPtO80dTqcM4buz7WMVPMRuSqg-HuCPB3DjzD4M84OiHZSFB_5xOJIUqP0dWLAuPTalu2T-le4Gp0gPXc863YfLEMzRm8cxbvdASwQrTZ5oKgoRVznDREW3NIgEONUU9A64bBeWi5xH1eyCbvh4l3Q-ZfkYG4A4w46FwAmfL4ClxCBiIkpZWhKv5GcN8bg7-msaNlvlejpvbSuVWpt5CLJzpCXHh1AqCUBkXzp8ObSGGIw1BfkVFnyH26bpho2kAzxbGtdwNx4TdGlu_XYlw\n")])])]),n("p",[e._v("注意把user那的client-certificate-data client-key-data 删掉，加上token, 我这直接在/etc/kubernetes/admin.conf上修改的，也可以重新生成配置文件：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("kubectl config set-credentials fanux \\\n--client-certificate=/etc/kubernetes/pki/ca.crt \\\n--client-key=/etc/kubernetes/pki/ca.key \\\n--token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImJjOTU0NjdlM2I0OTE5YWE1OTEzZDNkMDU3NGM2ZTRjYjBjY2NhNzgifQ.eyJpc3MiOiJodHRwczovLzQ3LjUyLjE5Ny4xNjM6MzIwMDAiLCJzdWIiOiJDZ2M0T1RFeU5UVTNFZ1puYVhSb2RXSSIsImF1ZCI6ImV4YW1wbGUtYXBwIiwiZXhwIjoxNTIzOTYyNjUyLCJpYXQiOjE1MjM4NzYyNTIsImF0X2hhc2giOiJFUXRWWm5ObE50c2hhWERfZ3N2UkNBIiwiZW1haWwiOiJmaHRqb2JAaG90bWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6InN0ZXZlbiJ9.vu0keGMoRGg6OAYpMZNN9zm4pnKXGyXDkZaRNj6MXDY9XsfnBDT4HnXkY17Lvm1ow0xPbq9cgVL3JBZT73jiddgFNAIXJffHfPejlVRSqXx9iF1uEcNIc5tDA1hUPtBrX8n_rzdz0sZsPMb4ZYMx3AdEylszpVrS_OelbB4I_2eLfO0KzwcEknOgV8cZZghCCITl6ZTOeeWEv5FPvJjRC2rpu_MkSY5tAf30SITwldFUMgF8ei3aPrZdojPLgqUWtxKaDmPpcHVLhYr0sLE_BnDZLjGP4ff8l5yy_EfDc7sQsrJR7StwZXRnK-n2omqaV3z-n5IxaUty85e_97FA1g \\\n--embed-certs=true \\\n--kubeconfig=fanux.config\n\nkubectl config set-context kubernetes \\\n--cluster=kubernetes \\\n--user=fanux \\\n--namespace=default \\\n--kubeconfig=fanux.config\n\nkubectl config use-context kubernetes --kubeconfig=fanux.config\n\nkubectl config set-cluster kubernetes --server=https://172.31.244.238:6443 --certificate-authority=/etc/kubernetes/pki/ca.key  --kubeconfig=fanux.config\n")])])]),n("p",[e._v("验证：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ kubectl get pod #正常\n")])])]),n("p",[e._v("删除角色绑定再执行get pod")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('[root@master2 dex]# kubectl delete -f examples/k8s/role.yaml\nclusterrolebinding.rbac.authorization.k8s.io "read-secrets-global" deleted\n[root@master2 dex]# kubectl get pod\nError from server (Forbidden): pods is forbidden: User "fhtjob@hotmail.com" cannot list pods in the namespace "default"\n')])])]),n("p",[e._v("已经无权限了。\n至于给用户分配更细的权限，比较简单，读者门自己倒持去吧")])])}),[],!1,null,null,null);t.default=s.exports}}]);